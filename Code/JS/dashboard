// Example event data
const events = [
    { name: "Rock Concert", type: "Concert", date: "2025-10-10", ticketsSold: 120, capacity: 200, attendees: 100, revenue: 6000 },
    { name: "Food Festival", type: "Festival", date: "2025-11-11", ticketsSold: 80, capacity: 150, attendees: 75, revenue: 2000 },
    { name: "Hockey Game", type: "Sports", date: "2025-12-12", ticketsSold: 200, capacity: 250, attendees: 180, revenue: 15000 }
];

// References
const eventSelect = document.getElementById('eventSelect');
const metrics = document.getElementById('metrics');
const charts = document.getElementById('charts');
let ticketsChart, attendanceChart;

// Filter elements
const filterDate = document.getElementById('filterDate');
const filterType = document.getElementById('filterType');

// Populate dropdown based on filtered list
function populateDropdown(filteredEvents) {
    eventSelect.innerHTML = ""; // Clear dropdown

    if (filteredEvents.length === 0) {
        const option = document.createElement('option');
        option.textContent = "No matching events";
        option.disabled = true;
        eventSelect.appendChild(option);
        return;
    }

    const defaultOption = document.createElement('option');
    defaultOption.value = "";
    defaultOption.textContent = "--Choose Event--";
    eventSelect.appendChild(defaultOption);

    filteredEvents.forEach((event, index) => {
        const option = document.createElement('option');
        option.value = events.indexOf(event); // Keep reference to original array
        option.textContent = event.name;
        eventSelect.appendChild(option);
    });
}

// Initial population
populateDropdown(events);

// Filter function
function applyFilters() {
    const selectedDate = filterDate.value;
    const selectedType = filterType.value;

    const filtered = events.filter(event => {
        const dateMatch = !selectedDate || event.date === selectedDate;
        const typeMatch = !selectedType || event.type === selectedType;
        return dateMatch && typeMatch;
    });

    populateDropdown(filtered);

    metrics.style.display = 'none';
    charts.style.display = 'none';
}

// Event listeners for filters
filterDate.addEventListener('change', applyFilters);
filterType.addEventListener('change', applyFilters);

// Function to update charts
function updateCharts(event) {
    const ticketsCtx = document.getElementById('ticketsChart').getContext('2d');
    if (ticketsChart) ticketsChart.destroy();
    ticketsChart = new Chart(ticketsCtx, {
        type: 'bar',
        data: {
            labels: ['Tickets Sold', 'Remaining Capacity'],
            datasets: [{
                label: 'Tickets',
                data: [event.ticketsSold, event.capacity - event.ticketsSold],
                backgroundColor: ['#0056b3', '#007bff']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'Ticket Sales Overview', font: { size: 16 } }
            },
            scales: { y: { beginAtZero: true } }
        }
    });

    const attendanceCtx = document.getElementById('attendanceChart').getContext('2d');
    if (attendanceChart) attendanceChart.destroy();
    attendanceChart = new Chart(attendanceCtx, {
        type: 'pie',
        data: {
            labels: ['Attended', 'No-Show'],
            datasets: [{
                label: 'Attendance',
                data: [event.attendees, event.ticketsSold - event.attendees],
                backgroundColor: ['#28a745', '#dc3545']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: { display: true, text: 'Attendance Breakdown', font: { size: 16 } }
            }
        }
    });
}

// Event listener for dropdown
eventSelect.addEventListener('change', () => {
    const selectedIndex = eventSelect.value;
    if (selectedIndex === "") {
        metrics.style.display = 'none';
        charts.style.display = 'none';
        return;
    }

    const event = events[selectedIndex];

    metrics.style.display = 'grid';
    charts.style.display = 'grid';
    document.getElementById('ticketsSold').textContent = event.ticketsSold;
    document.getElementById('remainingCapacity').textContent = event.capacity - event.ticketsSold;
    document.getElementById('attendees').textContent = event.attendees;
    document.getElementById('revenue').textContent = `$${event.revenue}`;

    updateCharts(event);
});
